set nocompatible

call plug#begin()

Plug '$HOME/.fzf'
Plug 'cespare/vim-toml'
Plug '/usr/local/opt/fzf'
Plug 'benmills/vimux'
Plug 'christoomey/vim-tmux-navigator'
Plug 'elixir-lang/vim-elixir'
Plug 'fatih/vim-go'
Plug 'junegunn/fzf.vim'
Plug 'junegunn/goyo.vim'
Plug 'junegunn/limelight.vim'
" Plug 'junegunn/gv.vim'
Plug 'junegunn/vim-peekaboo'
Plug 'leafgarland/typescript-vim'
Plug 'mattn/emmet-vim'
Plug 'mattn/gist-vim'
Plug 'mattn/webapi-vim'
Plug 'pangloss/vim-javascript'
Plug 'Quramy/tsuquyomi'
Plug 'rhysd/vim-crystal'
Plug 'rizzatti/dash.vim'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree', { 'on': 'NERDTreeToggle' }
" Plug 'Shougo/unite-outline'
" Plug 'Shougo/unite.vim'
Plug 'SirVer/ultisnips'
Plug 'sjl/gundo.vim'
Plug 'slashmili/alchemist.vim'
Plug 'terryma/vim-multiple-cursors'
Plug 'tmux-plugins/vim-tmux'
Plug 'tmux-plugins/vim-tmux-focus-events'
" Plug 'tpope/vim-abolish'
Plug 'tpope/vim-fugitive'
" Plug 'tpope/vim-rhubarb'
Plug 'tpope/vim-surround'
Plug 'w0rp/ale'

call plug#end()

" Editing
set backspace=indent,eol,start
set hidden
set ruler

" Status line
set statusline=%f\ %y\ %h%m%r%w%=%c@%l/%L

" Visual styling
colorscheme Tomorrow-Night
set background=dark
set colorcolumn=100
set laststatus=2
set lazyredraw
set list
set number
set numberwidth=4
set showcmd
set wildmenu
set fillchars=vert:│
let &t_ZH="\e[3m"
let &t_ZR="\e[23m"
let &listchars='tab:▸ ,extends:❯,precedes:❮,nbsp:±,trail:·'

" Searching
set hlsearch
set ignorecase
set incsearch
set smartcase

" Indentation
set autoindent
set expandtab
set shiftround
set shiftwidth=2
set softtabstop=2
set tabstop=2

" Miscellaneous
set autoread
set dictionary+=/usr/share/dict/words
set display=truncate
set foldlevelstart=99
set listchars+=trail:·
set mouse=a
set report=0
set scrolloff=5
set showbreak=...→\ 
set sidescrolloff=5
set splitbelow
set splitright
set synmaxcol=200
set timeoutlen=500
set ttymouse=sgr
set wildignore+=node_modules

" Wrapping/Line breaks
set breakindent
set linebreak
set showbreak=...→\ 

" File settings
set backup
set backupdir=$HOME/.vim/files/backup/
set backupext=.vimbackup
set backupskip=
set directory=$HOME/.vim/files/swap//
set updatecount=100
set undofile
set undodir=$HOME/.vim/files/undo/
set viminfo='100,n$HOME/.vim/files/info/viminfo
let g:netrw_home=$HOME.'/vim/files/'

" Syntax highlighting
syntax enable
filetype plugin indent on
highlight Comment cterm=italic

" Cursor style
let &t_SI="\033[5 q"
let &t_EI="\033[1 q"

" ALE
let g:ale_sign_error='☛'
let g:ale_pattern_options = {
      \ '.*\.java$': {'ale_enabled': 0},
      \}

" Gundo
let g:gundo_prefer_python3=1
let g:gundo_width=40
let g:gundo_right=1

" Gist
let g:gist_detect_filetype=1
let g:gist_open_browser_after_post=1
let g:gist_show_private=1
let g:gist_get_multiplefile=1

" Goyo
function! s:goyo_enter()
  silent !tmux set status off
  silent !tmux list-panes -F '\#F' | grep -q Z || tmux resize-pane -Z
  set noshowmode
  set noshowcmd
  Limelight
endfunction

function! s:goyo_leave()
  silent !tmux set status on
  silent !tmux list-panes -F '\#F' | grep -q Z && tmux resize-pane -Z
  set showmode
  set showcmd
  Limelight!
endfunction

autocmd! User GoyoEnter nested call <SID>goyo_enter()
autocmd! User GoyoLeave nested call <SID>goyo_leave()

let g:goyo_width=100
let g:goyo_height='85%'

" Limelight
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240

" vim-javascript
let g:javascript_plugin_jsdoc=1

" NERDCommenter
let g:NERDCommentEmptyLines=1
let g:NERDSpaceDelims=1
let g:NERDTrimTrailingWhitespace=1
let g:NERDDefaultAlign='left'

" NERDTree
let g:NERDTreeNaturalSort=1
let g:NERDTreeIgnore=['build/']
let g:NERDTreeRespectWildIgnore=1

" tsuquyomi
let g:tsuquyomi_definition_split=1
let g:tsuquyomi_disable_quickfix=1

" dash.vim
let g:dash_activate=0

" Mappings
let mapleader = ' '
nnoremap ; :
vnoremap ; :
map Q gq
nnoremap <silent> \ :NERDTreeToggle<cr>
nnoremap <silent> <leader>vv :source $MYVIMRC<cr>
nnoremap <silent> <leader>vp :source $MYVIMRC<cr> <bar> :PlugInstall<cr>
nnoremap <leader>S :%s/
vnoremap <leader>S :s/
inoremap kj <esc>
nnoremap <silent> <c-c> :nohlsearch<Bar>:echo<cr>""
nnoremap <silent> <leader>u :GundoToggle<cr>
nnoremap <silent> <leader>vss :Gstatus<cr>
nmap <silent> <leader>d <Plug>DashSearch
nnoremap <silent> <leader>n :call NumberToggle()<cr>
nnoremap <silent> ]q :cnext<cr>
nnoremap <silent> [q :cprev<cr>
nnoremap <silent> ]Q :clast<cr>
nnoremap <silent> [Q :cfirst<cr>
nnoremap <silent> <leader>go :Unite outline<cr>
nnoremap <silent> <leader>% :let @+ = join([expand("%"), line(".")], ":")<cr>
nnoremap <silent> <leader>an :ALENextWrap<cr>
nnoremap <silent> <leader>ap :ALEPreviousWrap<cr>
nnoremap <silent> <leader>z :Goyo<cr>

" Mappings - Vimux
nnoremap <silent> <leader>vsp :call VimuxRunCommand("git push")<cr>
nnoremap <leader>rr :VimuxPromptCommand<cr>
nnoremap <silent> <leader>rp :VimuxRunLastCommand<cr>
noremap <silent> <leader>rc :VimuxInterruptRunner<cr>
noremap <silent> <leader>rx :VimuxCloseRunner<cr>
noremap <silent> <leader>rz :VimuxZoomRunner<cr>

" Vim doesn't do normal escape with Ctrl+C
inoremap <c-c> <esc>

" Window navigation
nnoremap <c-h> <c-w>h
nnoremap <c-j> <c-w>j
nnoremap <c-k> <c-w>k
nnoremap <c-l> <c-w>l

" Splits
nnoremap <silent> <leader>\| :vsplit<cr>
nnoremap <silent> <leader>- :split<cr>

" Tabbing
nnoremap <silent> <leader>tt :tabnew<cr>
nnoremap <silent> <leader>tn :tabnext<cr>
nnoremap <silent> <leader>tp :tabprev<cr>
nnoremap <silent> <leader>tc :tabclose<cr>
nnoremap <silent> } :tabnext<cr>
nnoremap <silent> { :tabprev<cr>

" Fuzzy finding
nnoremap <leader>fd :FZF<cr>
nnoremap <leader>fa :Ag<cr>
nnoremap <leader>fb :Buffers<cr>
nnoremap <leader>fl :BLines<cr>
nnoremap <leader>fh :History<cr>
nnoremap <leader>f? :Helptags<cr>
nnoremap <leader>fc :Commands<cr>
nnoremap <leader>fm :Marks<cr>
nnoremap <leader>fs :Snippets<cr>
nnoremap <leader>fg :GFiles?<cr>
nnoremap <leader>fw :Windows<cr>

runtime! local/**/*.vim

set exrc
set secure
